function clean_logs {
  cwd=$(pwd)
  cd ~/tmp
  for log in *.log; do 
    tmp=$log
    perl ~/bin/fix_log.pl $log > ${tmp:0:15}.log
    mv ${tmp:0:15}.log ../logs
    rm $log 
  done
  cd $cwd
}

function git_add_and_push {
  if [ -z "$1" ]
  then
    git add -A && git commit  && git push
  else
    git add -A && git commit -m "$1" && git push
  fi 
}

function history {
  ack $1 ~/logs
}

function job_handler {
  if [ -z "$1" ]; then
    jobs
  else
    fg $1
  fi
}

function docker_python {
if [ -z "$PORT" ]
  then
    PORT=8888
fi
   
docker run -it --rm -v `pwd`:/home/jovyan/work -p $PORT:8888 jupyter/scipy-notebook $1
}

function note_tool {
file=$1
filename="${file%.*}_notes"

c${filename%.*}p ~/.bash/note_tool.latex .

docker run -v `pwd`:/source joshuacook/pandoc pdftk $1 burst
touch new_pdf.md

for f in pg*.pdf
do
    echo "![]($f)" >> new_pdf.md
    echo " " >> new_pdf.md
    echo " " >> new_pdf.md
    echo "\\pagebreak" >> new_pdf.md
done

docker run -v `pwd`:/source joshuacook/pandoc -f markdown new_pdf.md --template=note_tool.latex -o $filename.pdf

rm new_pdf.md
rm note_tool.latex
rm pg*.pdf
}

function markdown_to_presentation {
  echo "<!DOCTYPE html><html><head>" > tmp.html
  echo "  <title>Title</title>" >> tmp.html
  echo "  <meta charset='utf-8'>" >> tmp.html
  echo "  <style>" >> tmp.html
  echo "    @import url(https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz);" >> tmp.html
  echo "    @import url(https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic);" >> tmp.html
  echo "    @import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic);" >> tmp.html
  echo "    body { font-family: 'Droid Serif'; font-size:10px; }" >> tmp.html
  echo "    p, li, h3 {font-size: 24px;}" >> tmp.html
  echo "    h1 {font-size: 42px;}" >> tmp.html
  echo "    h2 {font-size: 36px;}" >> tmp.html
  echo "    h3 {font-size: 30px;}" >> tmp.html
  echo "    h4 {font-size: 24px;}" >> tmp.html
  echo "    h5 {font-size: 18px;}" >> tmp.html
  echo "    h1, h2, h3 {font-family: 'Yanone Kaffeesatz'; font-weight: normal;}" >> tmp.html
  echo "    #banner { position: relative; left: -65px; top: -16px; width: 910px; height:55px; background-color: black; z-index: 9999}" >> tmp.html
  echo "    #masthead { top: 0; padding: 0 1rem; position: absolute; z-index: 888; width: 100%; height: 3.5rem }" >> tmp.html
  echo "    #title, #masthead #logo {position: absolute; top: 0px;}" >> tmp.html
  echo "    #logo img {margin-top: 5px; margin-left: 5px} " >> tmp.html
  echo "    #title {color: white; right: 0px; text-align: right; margin-top: 0px; top: -8px; margin-right:10px}" >> tmp.html
  echo "    #logo {left: 0px;}" >> tmp.html
  echo "    #logo a img {width: 400px;}" >> tmp.html
  echo "    .height_200_image img {height:200px; margin: 0 auto; display: block; }" >> tmp.html
  echo "    .height_250_image img {height:250px; margin: 0 auto; display: block; }" >> tmp.html
  echo "    .height_300_image img {height:300px; margin: 0 auto; display: block; }" >> tmp.html
  echo "    .height_400_image img {height:400px; margin: 0 auto; display: block; }" >> tmp.html
  echo "    .height_500_image img {height:500px; margin: 0 auto; display: block; }" >> tmp.html
  echo "    .remark-slide-content {font-size: 16px;" >> tmp.html
  echo "    .remark-code, .remark-inline-code { font-family: 'Ubuntu Mono'; }" >> tmp.html
  echo "  </style>" >> tmp.html
  echo "  <script type='text/x-mathjax-config'>" >> tmp.html
  echo "     MathJax.Hub.Config({" >> tmp.html
  echo "       tex2jax: {inlineMath: [['$','$']]}" >> tmp.html
  echo "     });" >> tmp.html
  echo "  </script>" >> tmp.html
  echo "  <script type='text/javascript' async" >> tmp.html
  echo "    src='https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML'>" >> tmp.html
  echo "  </script>" >> tmp.html
  echo "  </head><body>" >> tmp.html
  echo "  <textarea id='source'>" >> tmp.html
  echo "layout: true" >> tmp.html
  echo "    <div id='banner'>" >> tmp.html
  echo "      <div class='masthead'>" >> tmp.html
  echo "        <div id='logo'>" >> tmp.html
  echo "          <a href='#' id='homepage'><img alt='General Assembly' src='https://dl.dropboxusercontent.com/u/407587/img/ga-lockup-0663e7bddc6871da69c1d60fb44713fe.png' /></a>" >> tmp.html
  echo "        </div>" >> tmp.html
  sed '10q;d' $1 | sed -E 's/# !\[\].+)(.+)/        <h1 id="title">\1<\/h1>/g' >> tmp.html
  echo "      </div>" >> tmp.html
  echo "    </div>" >> tmp.html
  echo " " >> tmp.html
  echo "---" >> tmp.html
  echo " " >> tmp.html
  tail -n +11 $1 >> tmp.html
  sed -i.bak 's/^------/???/g' tmp.html
  echo "</textarea><script src='https://gnab.github.io/remark/downloads/remark-latest.min.js'></script><script>var slideshow = remark.create();</script></body></html>" >> tmp.html
  mv tmp.html $(dirname "${1}")/slides.html
}

function insert_type {
head -n 2 $1 > tmp.md
echo "type: lesson" >> tmp.md
tail -n +3 $1 >> tmp.md
mv tmp.md $1
}

function pandoc_me {
docker run -v `pwd`:/source joshuacook/pandoc -f markdown '$1.md' -o '$1.pdf'
}

function remove_password_pdf {
docker run -v `pwd`:/source joshuacook/pandoc qpdf -password=$3 -decrypt $1 $2
}

function sup {
  ps auxw | grep "$1"
}

